.arraw-popup (@left: 50%, @bgColor: #fff, @borderColor: @material-gray) {
    position: absolute;
    z-index: 1000;
    border: 1px solid @borderColor;
    background-color: @bgColor;
    &:after, &:before {
        bottom: 100%;
        left: @left;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
    }
    &:after {
        border-color: rgba(red(@bgColor), green(@bgColor), blue(@bgColor), 0);
        border-bottom-color: @bgColor;
        border-width: 13px;
        margin-left: -13px;
    } 
    &:before {
        border-color: rgba(red(@borderColor), green(@borderColor), blue(@borderColor), 0);
        border-bottom-color: @borderColor;
        border-width: 15px;
        margin-left: -15px;
    }
}

.text() {
    -webkit-font-smoothing: antialiased;
}

.unselectable() {
    -webkit-user-select: none;    
}

.ease-out(@duration: 450ms, @property: all, @delay: 0ms) {
    transition: @property @duration @material-ease-out-timing-function @delay;
}

.text-field (@transition: false, @borderWidth: 1px) {
    input, textarea {
        border-bottom-width: @borderWidth;

        & when not (@transition = false) {
            transition: @transition
        }
    } 
}

.text-hint (@size: large, @transition: false) {
    label when (@size = small) {
        transform: translate3d(0, 4px, 0) scale(0.75);
    }

    label when not (@size = small) {
        transform: translate3d(0, 22px, 0);
        transform-origin: left center;
    }

    label when not (@transition = false) {
        transition: @transition;
    }
}

.text-dashed-line(@dotGap, @dotSize) {
    background-size: @dotSize @dotGap;
    background-position: 0 bottom;
    background-repeat: repeat-x;
}

.input-placeholder(@color) {
    &:-ms-input-placeholder {
        color: @color;
    }
    &::-webkit-input-placeholder {
        color: @color;
    }
}